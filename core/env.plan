(def $defmacro
  ($vau name-params-body env
        (eval env (list def (first name-params-body) (cons $vau (rest name-params-body))))))

($defmacro quote value- env (first value-))

($defmacro if args env
  (eval env (bool (eval env (first args)) (nth args 1) (nth args 2))))

($defmacro wrap args definition-env
  ($vau arguments calling-env
        (operate calling-env
                 (eval definition-env (first args))
                 (operate calling-env list arguments))))

($defmacro $fn params-body definition-env
  (wrap (eval definition-env (list $vau (first params-body) (quote _) (nth params-body 1)))))

($defmacro $defn name-params-body env
  (eval env (list def (first name-params-body) (cons $fn (rest name-params-body)))))

($defn second args (nth (first args) 1))
